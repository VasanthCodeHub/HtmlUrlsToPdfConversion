// Generated by view binder compiler. Do not edit!
package com.example.htmltopdflib.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.EditText;
import android.widget.ImageView;
import android.widget.LinearLayout;
import android.widget.ProgressBar;
import android.widget.ScrollView;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.htmltopdflib.R;
import com.google.android.material.button.MaterialButton;
import com.google.android.material.card.MaterialCardView;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityHtmlToPdfBinding implements ViewBinding {
  @NonNull
  private final ScrollView rootView;

  @NonNull
  public final ImageView appIcon;

  @NonNull
  public final MaterialButton downloadButton;

  @NonNull
  public final MaterialCardView featuresCard;

  @NonNull
  public final MaterialCardView inputCard;

  @NonNull
  public final ProgressBar progressBar;

  @NonNull
  public final LinearLayout progressLayout;

  @NonNull
  public final TextView progressText;

  @NonNull
  public final TextView subtitleText;

  @NonNull
  public final TextView titleText;

  @NonNull
  public final EditText urlInput;

  private ActivityHtmlToPdfBinding(@NonNull ScrollView rootView, @NonNull ImageView appIcon,
      @NonNull MaterialButton downloadButton, @NonNull MaterialCardView featuresCard,
      @NonNull MaterialCardView inputCard, @NonNull ProgressBar progressBar,
      @NonNull LinearLayout progressLayout, @NonNull TextView progressText,
      @NonNull TextView subtitleText, @NonNull TextView titleText, @NonNull EditText urlInput) {
    this.rootView = rootView;
    this.appIcon = appIcon;
    this.downloadButton = downloadButton;
    this.featuresCard = featuresCard;
    this.inputCard = inputCard;
    this.progressBar = progressBar;
    this.progressLayout = progressLayout;
    this.progressText = progressText;
    this.subtitleText = subtitleText;
    this.titleText = titleText;
    this.urlInput = urlInput;
  }

  @Override
  @NonNull
  public ScrollView getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityHtmlToPdfBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityHtmlToPdfBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_html_to_pdf, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityHtmlToPdfBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.appIcon;
      ImageView appIcon = ViewBindings.findChildViewById(rootView, id);
      if (appIcon == null) {
        break missingId;
      }

      id = R.id.downloadButton;
      MaterialButton downloadButton = ViewBindings.findChildViewById(rootView, id);
      if (downloadButton == null) {
        break missingId;
      }

      id = R.id.featuresCard;
      MaterialCardView featuresCard = ViewBindings.findChildViewById(rootView, id);
      if (featuresCard == null) {
        break missingId;
      }

      id = R.id.inputCard;
      MaterialCardView inputCard = ViewBindings.findChildViewById(rootView, id);
      if (inputCard == null) {
        break missingId;
      }

      id = R.id.progressBar;
      ProgressBar progressBar = ViewBindings.findChildViewById(rootView, id);
      if (progressBar == null) {
        break missingId;
      }

      id = R.id.progressLayout;
      LinearLayout progressLayout = ViewBindings.findChildViewById(rootView, id);
      if (progressLayout == null) {
        break missingId;
      }

      id = R.id.progressText;
      TextView progressText = ViewBindings.findChildViewById(rootView, id);
      if (progressText == null) {
        break missingId;
      }

      id = R.id.subtitleText;
      TextView subtitleText = ViewBindings.findChildViewById(rootView, id);
      if (subtitleText == null) {
        break missingId;
      }

      id = R.id.titleText;
      TextView titleText = ViewBindings.findChildViewById(rootView, id);
      if (titleText == null) {
        break missingId;
      }

      id = R.id.urlInput;
      EditText urlInput = ViewBindings.findChildViewById(rootView, id);
      if (urlInput == null) {
        break missingId;
      }

      return new ActivityHtmlToPdfBinding((ScrollView) rootView, appIcon, downloadButton,
          featuresCard, inputCard, progressBar, progressLayout, progressText, subtitleText,
          titleText, urlInput);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
